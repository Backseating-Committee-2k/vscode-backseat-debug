// SYNTAX TEST "source.bslang" "Main test BS file"

   //TODO: update this file, some syntax chnaged, see https://github.com/mgerhold/kiddo/blob/main/test.bs
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.line.double-slash.bslang
   
   
   import std.console;
// ^^^^^^ source.bslang entity.import.bslang keyword.control.import.bslang
//       ^ source.bslang entity.import.bslang
//        ^^^ source.bslang entity.import.bslang entity.import.bslang string.quoted.other.import.bslang
//           ^ source.bslang entity.import.bslang entity.import.bslang keyword.operator.inport.seperator.bslang
//            ^^^^^^^ source.bslang entity.import.bslang entity.import.bslang string.quoted.other.import.bslang
//                   ^ source.bslang entity.import.bslang punctuation.terminator.import.bslang
   // a comment here :) 
// ^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.line.double-slash.bslang
   
   /*
// ^^ source.bslang comment.block.bslang
   a block comment 
// ^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
   */
// ^^ source.bslang comment.block.bslang
   
   // empty block, this should work too!!
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.line.double-slash.bslang
   /**/
// ^^^^ source.bslang comment.block.block.empty.bslang
   type THIS_SHOULD_BE_HIGHLIGHTED {
// ^^^^ source.bslang entity.struct.bslang keyword.control.type.bslang
//     ^ source.bslang entity.struct.bslang
//      ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.struct.bslang entity.name.type.bslang
//                                ^ source.bslang entity.struct.bslang
//                                 ^ source.bslang entity.struct.bslang punctuation.definition.type.begin.bslang
         //TODO are the trailing this "," optional or not?
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.struct.bslang comment.line.double-slash.bslang
       K {a: Char },
// ^^^^ source.bslang entity.struct.bslang
//     ^ source.bslang entity.struct.bslang entity.name.type.bslang
//      ^ source.bslang entity.struct.bslang
//       ^ source.bslang entity.struct.bslang punctuation.definition.struct.member.begin.bslang
//        ^ source.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//         ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//          ^ source.bslang entity.struct.bslang entity.struct_field.bslang
//           ^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.builtin.bslang
//               ^ source.bslang entity.struct.bslang
//                ^ source.bslang entity.struct.bslang punctuation.definition.struct.member.end.bslang
//                 ^ source.bslang entity.struct.bslang punctuation.separator.comma.struct.member.bslang
       J {
// ^^^^ source.bslang entity.struct.bslang
//     ^ source.bslang entity.struct.bslang entity.name.type.bslang
//      ^ source.bslang entity.struct.bslang
//       ^ source.bslang entity.struct.bslang punctuation.definition.struct.member.begin.bslang
           a: Bool,
// ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang
//         ^ source.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//          ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//           ^ source.bslang entity.struct.bslang entity.struct_field.bslang
//            ^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.builtin.bslang
//                ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.comma.struct.field.bslang
           b: Char
// ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang
//         ^ source.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//          ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//           ^ source.bslang entity.struct.bslang entity.struct_field.bslang
//            ^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.builtin.bslang
       },
// ^^^^ source.bslang entity.struct.bslang
//     ^ source.bslang entity.struct.bslang punctuation.definition.struct.member.end.bslang
//      ^ source.bslang entity.struct.bslang punctuation.separator.comma.struct.member.bslang
   }
// ^ source.bslang entity.struct.bslang punctuation.definition.type.end.bslang
   
   //TODO
// ^^^^^^ source.bslang comment.line.double-slash.bslang
   /*
// ^^ source.bslang comment.block.bslang
   general TODO list:
// ^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
   * make "struct_member" also end without "," but only in the last struct member!
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
   * brackets dont work as intended in nested function return types, since the return type works without them.
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
   * implement binary and tertiary operator correctly, not as single highlight token!
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
   * fix issues, see down below (mainly operator issues, that will be solved, when rewriting operators correctly)
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
   * add proper assignment postfix operators, this has to be solved with the operator rewrite
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
   * ...
// ^^^^^^ source.bslang comment.block.bslang
   * -----------------------------------------------------------
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
   Questions regarding syntax
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
   * can you put export before "type"?
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
   * is in "type T {S {}}"" S or T a struct name and which of the ones is the type?
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
   * How are nested function return types like "Function() ~> Function() ~> Char" treated, if they're even allowed?
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
   * * "Function() ~> (Function() ~> Char)" right associative (haskell like)
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
   * * "(Function() ~> Function()) ~> Char" left associative
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
   * * to solve these there have to be () allowed, are they?
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
   * ...
// ^^^^^^ source.bslang comment.block.bslang
   */
// ^^ source.bslang comment.block.bslang
   
   /**
// ^^^ source.bslang comment.block.documentation.bslang
   * this is a documentation comment
// ^^ source.bslang comment.block.documentation.bslang comment.block.documentation.bslang
//   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.documentation.bslang comment.block.documentation.bslang comment.block.documentation.bslang
   * @description A test type
// ^^ source.bslang comment.block.documentation.bslang comment.block.documentation.bs_doc
//   ^ source.bslang comment.block.documentation.bslang comment.block.documentation.bs_doc punctuation.decorator.bs_doc
//    ^^^^^^^^^^^ source.bslang comment.block.documentation.bslang comment.block.documentation.bs_doc storage.type.class.bs_doc
//               ^ source.bslang comment.block.documentation.bslang comment.block.documentation.bs_doc
//                ^^^^^^^^^^^ source.bslang comment.block.documentation.bslang comment.block.documentation.bs_doc comment.block.documentation.bs_doc.raw
   * @author test
// ^^ source.bslang comment.block.documentation.bslang comment.block.documentation.bs_doc
//   ^ source.bslang comment.block.documentation.bslang comment.block.documentation.bs_doc punctuation.decorator.bs_doc
//    ^^^^^^ source.bslang comment.block.documentation.bslang comment.block.documentation.bs_doc storage.type.class.bs_doc
//          ^ source.bslang comment.block.documentation.bslang comment.block.documentation.bs_doc
//           ^^^^ source.bslang comment.block.documentation.bslang comment.block.documentation.bs_doc comment.block.documentation.bs_doc.raw
   */
// ^^ source.bslang comment.block.documentation.bslang
   type T {
// ^^^^ source.bslang entity.struct.bslang keyword.control.type.bslang
//     ^ source.bslang entity.struct.bslang
//      ^ source.bslang entity.struct.bslang entity.name.type.bslang
//       ^ source.bslang entity.struct.bslang
//        ^ source.bslang entity.struct.bslang punctuation.definition.type.begin.bslang
   //TODO is in type T {S {}} S or T a struct name?
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.struct.bslang comment.line.double-slash.bslang
       S {
// ^^^^ source.bslang entity.struct.bslang
//     ^ source.bslang entity.struct.bslang entity.name.type.bslang
//      ^ source.bslang entity.struct.bslang
//       ^ source.bslang entity.struct.bslang punctuation.definition.struct.member.begin.bslang
           // this comment should be allowed
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.struct.bslang comment.line.double-slash.bslang
           n: U32,
// ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang
//         ^ source.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//          ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//           ^ source.bslang entity.struct.bslang entity.struct_field.bslang
//            ^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.builtin.bslang
//               ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.comma.struct.field.bslang
           /*
// ^^^^^^^^^^ source.bslang entity.struct.bslang comment.block.bslang
           This comment too
// ^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.struct.bslang comment.block.bslang
           */
// ^^^^^^^^ source.bslang entity.struct.bslang comment.block.bslang
//         ^^ source.bslang entity.struct.bslang comment.block.bslang
           b: Bool
// ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang
//         ^ source.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//          ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//           ^ source.bslang entity.struct.bslang entity.struct_field.bslang
//            ^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.builtin.bslang
       },
// ^^^^ source.bslang entity.struct.bslang
//     ^ source.bslang entity.struct.bslang punctuation.definition.struct.member.end.bslang
//      ^ source.bslang entity.struct.bslang punctuation.separator.comma.struct.member.bslang
       U {
// ^^^^ source.bslang entity.struct.bslang
//     ^ source.bslang entity.struct.bslang entity.name.type.bslang
//      ^ source.bslang entity.struct.bslang
//       ^ source.bslang entity.struct.bslang punctuation.definition.struct.member.begin.bslang
           /** And specially these too
// ^^^^^^^^^^^ source.bslang entity.struct.bslang comment.block.documentation.bslang
//            ^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.struct.bslang comment.block.documentation.bslang
           * @description a struct field description
// ^^^^^^^^^^ source.bslang entity.struct.bslang comment.block.documentation.bslang comment.block.documentation.bs_doc
//           ^ source.bslang entity.struct.bslang comment.block.documentation.bslang comment.block.documentation.bs_doc punctuation.decorator.bs_doc
//            ^^^^^^^^^^^ source.bslang entity.struct.bslang comment.block.documentation.bslang comment.block.documentation.bs_doc storage.type.class.bs_doc
//                       ^ source.bslang entity.struct.bslang comment.block.documentation.bslang comment.block.documentation.bs_doc
//                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.struct.bslang comment.block.documentation.bslang comment.block.documentation.bs_doc comment.block.documentation.bs_doc.raw
           */
// ^^^^^^^^ source.bslang entity.struct.bslang comment.block.documentation.bslang
//         ^^ source.bslang entity.struct.bslang comment.block.documentation.bslang
           s1: S,
// ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang
//         ^^ source.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//           ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//            ^ source.bslang entity.struct.bslang entity.struct_field.bslang
//             ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.custom.bslang
//              ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.comma.struct.field.bslang
           s2: S
// ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang
//         ^^ source.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//           ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//            ^ source.bslang entity.struct.bslang entity.struct_field.bslang
//             ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.custom.bslang
       },
// ^^^^ source.bslang entity.struct.bslang
//     ^ source.bslang entity.struct.bslang punctuation.definition.struct.member.end.bslang
//      ^ source.bslang entity.struct.bslang punctuation.separator.comma.struct.member.bslang
       A {
// ^^^^ source.bslang entity.struct.bslang
//     ^ source.bslang entity.struct.bslang entity.name.type.bslang
//      ^ source.bslang entity.struct.bslang
//       ^ source.bslang entity.struct.bslang punctuation.definition.struct.member.begin.bslang
           s1: [Bool;5],
// ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang
//         ^^ source.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//           ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//            ^ source.bslang entity.struct.bslang entity.struct_field.bslang
//             ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang punctuation.definition.type.array.begin.bslang
//              ^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang entity.name.type.builtin.bslang
//                  ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang punctuation.separator.type.array.with_length.bslang
//                   ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang constant.numeric.bslang
//                    ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang punctuation.definition.type.array.end.bslang
//                     ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.comma.struct.field.bslang
           s2: [U32],
// ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang
//         ^^ source.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//           ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//            ^ source.bslang entity.struct.bslang entity.struct_field.bslang
//             ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang punctuation.definition.type.array.begin.bslang
//              ^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang entity.name.type.builtin.bslang
//                 ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang punctuation.definition.type.array.end.bslang
//                  ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.comma.struct.field.bslang
           s3: Function(Bool),
// ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang
//         ^^ source.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//           ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//            ^ source.bslang entity.struct.bslang entity.struct_field.bslang
//             ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.function.keyword.bslang
//                     ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang punctuation.definition.type.function.begin.bslang
//                      ^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.builtin.bslang
//                          ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang punctuation.definition.type.function.end.bslang
//                           ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.comma.struct.field.bslang
           t3: Function(Bool, Char),
// ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang
//         ^^ source.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//           ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//            ^ source.bslang entity.struct.bslang entity.struct_field.bslang
//             ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.function.keyword.bslang
//                     ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang punctuation.definition.type.function.begin.bslang
//                      ^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.builtin.bslang
//                          ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang punctuation.separator.comma.function.parameters.bslang
//                           ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang
//                            ^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.builtin.bslang
//                                ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang punctuation.definition.type.function.end.bslang
//                                 ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.comma.struct.field.bslang
           r3: Function(Bool, Function(Char, U32)),
// ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang
//         ^^ source.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//           ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//            ^ source.bslang entity.struct.bslang entity.struct_field.bslang
//             ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.function.keyword.bslang
//                     ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang punctuation.definition.type.function.begin.bslang
//                      ^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.builtin.bslang
//                          ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang punctuation.separator.comma.function.parameters.bslang
//                           ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang
//                            ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.function.bslang entity.name.type.function.keyword.bslang
//                                    ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.function.bslang punctuation.definition.type.function.begin.bslang
//                                     ^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.function.bslang entity.name.type.builtin.bslang
//                                         ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.function.bslang punctuation.separator.comma.function.parameters.bslang
//                                          ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.function.bslang
//                                           ^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.function.bslang entity.name.type.builtin.bslang
//                                              ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.function.bslang punctuation.definition.type.function.end.bslang
//                                               ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang punctuation.definition.type.function.end.bslang
//                                                ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.comma.struct.field.bslang
           s4: mutable S,
// ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang
//         ^^ source.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//           ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//            ^ source.bslang entity.struct.bslang entity.struct_field.bslang
//             ^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.storage.modifier.mutable.bslang storage.modifier.mutable.bslang
//                    ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.storage.modifier.mutable.bslang
//                     ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.custom.bslang
//                      ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.comma.struct.field.bslang
           r4: -> S,
// ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang
//         ^^ source.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//           ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//            ^ source.bslang entity.struct.bslang entity.struct_field.bslang
//             ^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.pointer.bslang keyword.operator.pointer.bslang
//               ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.pointer.bslang
//                ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.custom.bslang
//                 ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.comma.struct.field.bslang
           z4: Function(Char) ~> Char,
// ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang
//         ^^ source.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//           ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//            ^ source.bslang entity.struct.bslang entity.struct_field.bslang
//             ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.keyword.bslang
//                     ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang punctuation.definition.type.function.with_return.begin.bslang
//                      ^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.builtin.bslang
//                          ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang punctuation.definition.type.function.with_return.end.bslang
//                           ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang
//                            ^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang keyword.operator.return_type.bslang
//                              ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang
//                               ^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.builtin.bslang
//                                   ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.comma.struct.field.bslang
           w4: Function(Char, U32) ~> (Function(S) ~> (Function([Bool; 8]) ~> Nothing)),
// ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang
//         ^^ source.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//           ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//            ^ source.bslang entity.struct.bslang entity.struct_field.bslang
//             ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.keyword.bslang
//                     ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang punctuation.definition.type.function.with_return.begin.bslang
//                      ^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.builtin.bslang
//                          ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang punctuation.separator.comma.function.parameters.bslang
//                           ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang
//                            ^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.builtin.bslang
//                               ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang punctuation.definition.type.function.with_return.end.bslang
//                                ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang
//                                 ^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang keyword.operator.return_type.bslang
//                                   ^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang
//                                     ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.keyword.bslang
//                                             ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang punctuation.definition.type.function.with_return.begin.bslang
//                                              ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.custom.bslang
//                                               ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang punctuation.definition.type.function.with_return.end.bslang
//                                                ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang
//                                                 ^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang keyword.operator.return_type.bslang
//                                                   ^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang
//                                                     ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.keyword.bslang
//                                                             ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang punctuation.definition.type.function.with_return.begin.bslang
//                                                              ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.array.bslang punctuation.definition.type.array.begin.bslang
//                                                               ^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.array.bslang entity.name.type.builtin.bslang
//                                                                   ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang punctuation.separator.type.array.with_length.bslang
//                                                                    ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang
//                                                                     ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang constant.numeric.bslang
//                                                                      ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.array.bslang punctuation.definition.type.array.end.bslang
//                                                                       ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang punctuation.definition.type.function.with_return.end.bslang
//                                                                        ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang
//                                                                         ^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang keyword.operator.return_type.bslang
//                                                                           ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang
//                                                                            ^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.builtin.bslang
//                                                                                   ^^ source.bslang entity.struct.bslang entity.struct_field.bslang
//                                                                                     ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.comma.struct.field.bslang
           s5: mutable -> mutable Function([U32; 1]),
// ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang
//         ^^ source.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//           ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//            ^ source.bslang entity.struct.bslang entity.struct_field.bslang
//             ^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.storage.modifier.mutable.bslang storage.modifier.mutable.bslang
//                    ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.storage.modifier.mutable.bslang
//                     ^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.pointer.bslang keyword.operator.pointer.bslang
//                       ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.pointer.bslang
//                        ^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.storage.modifier.mutable.bslang storage.modifier.mutable.bslang
//                               ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.storage.modifier.mutable.bslang
//                                ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.function.keyword.bslang
//                                        ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang punctuation.definition.type.function.begin.bslang
//                                         ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.array.bslang punctuation.definition.type.array.begin.bslang
//                                          ^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.array.bslang entity.name.type.builtin.bslang
//                                             ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang punctuation.separator.type.array.with_length.bslang
//                                              ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang
//                                               ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang constant.numeric.bslang
//                                                ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang entity.name.type.array.bslang punctuation.definition.type.array.end.bslang
//                                                 ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.bslang punctuation.definition.type.function.end.bslang
//                                                  ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.comma.struct.field.bslang
           s6: [[[Bool; 9]; 9]]
// ^^^^^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang
//         ^^ source.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//           ^ source.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//            ^ source.bslang entity.struct.bslang entity.struct_field.bslang
//             ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang punctuation.definition.type.array.begin.bslang
//              ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang entity.name.type.array.bslang punctuation.definition.type.array.begin.bslang
//               ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang entity.name.type.array.bslang entity.name.type.array.bslang punctuation.definition.type.array.begin.bslang
//                ^^^^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang entity.name.type.array.bslang entity.name.type.array.bslang entity.name.type.builtin.bslang
//                    ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang entity.name.type.array.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang punctuation.separator.type.array.with_length.bslang
//                     ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang entity.name.type.array.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang
//                      ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang entity.name.type.array.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang constant.numeric.bslang
//                       ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang entity.name.type.array.bslang entity.name.type.array.bslang punctuation.definition.type.array.end.bslang
//                        ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang punctuation.separator.type.array.with_length.bslang
//                         ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang
//                          ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang constant.numeric.bslang
//                           ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang entity.name.type.array.bslang punctuation.definition.type.array.end.bslang
//                            ^ source.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.array.bslang punctuation.definition.type.array.end.bslang
       },
// ^^^^ source.bslang entity.struct.bslang
//     ^ source.bslang entity.struct.bslang punctuation.definition.struct.member.end.bslang
//      ^ source.bslang entity.struct.bslang punctuation.separator.comma.struct.member.bslang
       //TODO is this last "," optional or not?
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.struct.bslang comment.line.double-slash.bslang
       Empty {},
// ^^^^ source.bslang entity.struct.bslang
//     ^^^^^ source.bslang entity.struct.bslang entity.name.type.bslang
//          ^ source.bslang entity.struct.bslang
//           ^ source.bslang entity.struct.bslang punctuation.definition.struct.member.begin.bslang
//            ^ source.bslang entity.struct.bslang punctuation.definition.struct.member.end.bslang
//             ^ source.bslang entity.struct.bslang punctuation.separator.comma.struct.member.bslang
   }
// ^ source.bslang entity.struct.bslang punctuation.definition.type.end.bslang
   
   namespace test {
// ^^^^^^^^^ source.bslang entity.namespace.bslang keyword.control.namespace.bslang
//          ^ source.bslang entity.namespace.bslang
//           ^^^^ source.bslang entity.namespace.bslang entity.name.namespace.declaration.bslang
//               ^ source.bslang entity.namespace.bslang
//                ^ source.bslang entity.namespace.bslang punctuation.definition.namespace.begin.bslang
       //test namespace
// ^^^^^^^^^^^^^^^^^^^^ source.bslang entity.namespace.bslang comment.line.double-slash.bslang
       //TODO: is an export keyword possible here?
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.namespace.bslang comment.line.double-slash.bslang
       type T {
// ^^^^ source.bslang entity.namespace.bslang
//     ^^^^ source.bslang entity.namespace.bslang entity.struct.bslang keyword.control.type.bslang
//         ^ source.bslang entity.namespace.bslang entity.struct.bslang
//          ^ source.bslang entity.namespace.bslang entity.struct.bslang entity.name.type.bslang
//           ^ source.bslang entity.namespace.bslang entity.struct.bslang
//            ^ source.bslang entity.namespace.bslang entity.struct.bslang punctuation.definition.type.begin.bslang
           U{
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.struct.bslang
//         ^ source.bslang entity.namespace.bslang entity.struct.bslang entity.name.type.bslang
//          ^ source.bslang entity.namespace.bslang entity.struct.bslang punctuation.definition.struct.member.begin.bslang
               h:Function(U32) ~> Nothing,
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.struct.bslang entity.struct_field.bslang
//             ^ source.bslang entity.namespace.bslang entity.struct.bslang entity.struct_field.bslang variable.name.struct_field.bslang
//              ^ source.bslang entity.namespace.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.colon.struct.field.bslang
//               ^^^^^^^^ source.bslang entity.namespace.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.keyword.bslang
//                       ^ source.bslang entity.namespace.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang punctuation.definition.type.function.with_return.begin.bslang
//                        ^^^ source.bslang entity.namespace.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.builtin.bslang
//                           ^ source.bslang entity.namespace.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang punctuation.definition.type.function.with_return.end.bslang
//                            ^ source.bslang entity.namespace.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang
//                             ^^ source.bslang entity.namespace.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang keyword.operator.return_type.bslang
//                               ^ source.bslang entity.namespace.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang
//                                ^^^^^^^ source.bslang entity.namespace.bslang entity.struct.bslang entity.struct_field.bslang entity.name.type.function.with_return.bslang entity.name.type.builtin.bslang
//                                       ^ source.bslang entity.namespace.bslang entity.struct.bslang entity.struct_field.bslang punctuation.separator.comma.struct.field.bslang
           },
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.struct.bslang
//         ^ source.bslang entity.namespace.bslang entity.struct.bslang punctuation.definition.struct.member.end.bslang
//          ^ source.bslang entity.namespace.bslang entity.struct.bslang punctuation.separator.comma.struct.member.bslang
       }
// ^^^^ source.bslang entity.namespace.bslang entity.struct.bslang
//     ^ source.bslang entity.namespace.bslang entity.struct.bslang punctuation.definition.type.end.bslang
   }
// ^ source.bslang entity.namespace.bslang punctuation.definition.namespace.end.bslang
   
   //TODO allow unicode identifier
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.line.double-slash.bslang
   /* 
// ^^ source.bslang comment.block.bslang
//   ^^ source.bslang comment.block.bslang
   function 🎅(){
// ^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
       return 24;
// ^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
   } */
// ^^ source.bslang comment.block.bslang
//   ^^ source.bslang comment.block.bslang
   
   function simple(a: Char){
// ^^^^^^^^ source.bslang entity.function.bslang storage.type.function.bslang
//         ^ source.bslang entity.function.bslang
//          ^^^^^^ source.bslang entity.function.bslang entity.name.function.bslang
//                ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.begin.bslang
//                 ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang meta.parameter.name.bslang
//                  ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.colon.paramter.type.bslang
//                   ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang
//                    ^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.builtin.bslang
//                        ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.end.bslang
//                         ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.defintion.block.begin.function.bslang
       //nothing here
// ^^^^^^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
       return nothing;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//     ^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang keyword.control.return.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//            ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang constant.language.nothing.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang punctuation.terminator.return.bslang
   }
// ^ source.bslang entity.function.bslang punctuation.defintion.block.end.function.bslang
   
   function nested_return_type(a: Char) ~> Function(S, K) ~> Function(S, U32) ~> T {
// ^^^^^^^^ source.bslang entity.function.bslang storage.type.function.bslang
//         ^ source.bslang entity.function.bslang
//          ^^^^^^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.name.function.bslang
//                            ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.begin.bslang
//                             ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang meta.parameter.name.bslang
//                              ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.colon.paramter.type.bslang
//                               ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang
//                                ^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.builtin.bslang
//                                    ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.end.bslang
//                                     ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang
//                                      ^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang keyword.operator.return_type.bslang
//                                        ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang
//                                         ^^^^^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.keyword.bslang
//                                                 ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang punctuation.definition.type.function.with_return.begin.bslang
//                                                  ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang entity.name.type.custom.bslang
//                                                   ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang punctuation.separator.comma.function.parameters.bslang
//                                                    ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang
//                                                     ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang entity.name.type.custom.bslang
//                                                      ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang punctuation.definition.type.function.with_return.end.bslang
//                                                       ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang
//                                                        ^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang keyword.operator.return_type.bslang
//                                                          ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang
//                                                           ^^^^^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.keyword.bslang
//                                                                   ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang punctuation.definition.type.function.with_return.begin.bslang
//                                                                    ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.custom.bslang
//                                                                     ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang punctuation.separator.comma.function.parameters.bslang
//                                                                      ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang
//                                                                       ^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.builtin.bslang
//                                                                          ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang punctuation.definition.type.function.with_return.end.bslang
//                                                                           ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang
//                                                                            ^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang keyword.operator.return_type.bslang
//                                                                              ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang
//                                                                               ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.with_return.bslang entity.name.type.custom.bslang
//                                                                                ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang
//                                                                                 ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.defintion.block.begin.function.bslang
       //nothing here
// ^^^^^^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
       return S{n: 2, b: false};
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//     ^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang keyword.control.return.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.struct.literal.bslang entity.name.type.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.struct.literal.bslang meta.block.struct_literal.begin.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.struct.literal.bslang entity.struct_field.bslang variable.name.struct_literal.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.struct.literal.bslang entity.struct_field.bslang punctuation.separator.colon.struct.literal.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.struct.literal.bslang entity.struct_field.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.struct.literal.bslang entity.struct_field.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.struct.literal.bslang entity.struct_field.bslang punctuation.separator.comma.struct_literal.member.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.struct.literal.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.struct.literal.bslang entity.struct_field.bslang variable.name.struct_literal.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.struct.literal.bslang entity.struct_field.bslang punctuation.separator.colon.struct.literal.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.struct.literal.bslang entity.struct_field.bslang
//                       ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.struct.literal.bslang entity.struct_field.bslang constant.language.boolean.bslang
//                            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.struct.literal.bslang meta.block.struct_literal.end.bslang
//                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang punctuation.terminator.return.bslang
   }
// ^ source.bslang entity.function.bslang punctuation.defintion.block.end.function.bslang
   
   export function test() ~> U32{
// ^^^^^^^ source.bslang entity.function.bslang keyword.control.export.bslang
//        ^^^^^^^^ source.bslang entity.function.bslang storage.type.function.bslang
//                ^ source.bslang entity.function.bslang
//                 ^^^^ source.bslang entity.function.bslang entity.name.function.bslang
//                     ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.begin.bslang
//                      ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.end.bslang
//                       ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang
//                        ^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang keyword.operator.return_type.bslang
//                          ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang
//                           ^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.builtin.bslang
//                              ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.defintion.block.begin.function.bslang
       return '\0';
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//     ^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang keyword.control.return.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.literal.char.escaped.bslang entity.literal.char.escaped.bslang punctuation.char_literal.bslang
//             ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.literal.char.escaped.bslang entity.literal.char.escaped.bslang constant.character.escape.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.literal.char.escaped.bslang entity.literal.char.escaped.bslang punctuation.char_literal.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang punctuation.terminator.return.bslang
       //TODO the range of chars is not enough for 'ü'!!
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
       return 'ü';
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//     ^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang keyword.control.return.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.literal.char.bslang entity.literal.char.bslang string.quotes.single.char_literal.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang punctuation.terminator.return.bslang
   }
// ^ source.bslang entity.function.bslang punctuation.defintion.block.end.function.bslang
   
   export function test2() ~> U32{
// ^^^^^^^ source.bslang entity.function.bslang keyword.control.export.bslang
//        ^^^^^^^^ source.bslang entity.function.bslang storage.type.function.bslang
//                ^ source.bslang entity.function.bslang
//                 ^^^^^ source.bslang entity.function.bslang entity.name.function.bslang
//                      ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.begin.bslang
//                       ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.end.bslang
//                        ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang
//                         ^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang keyword.operator.return_type.bslang
//                           ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang
//                            ^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.builtin.bslang
//                               ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.defintion.block.begin.function.bslang
       return 4324_32;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//     ^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang keyword.control.return.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//            ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang punctuation.terminator.return.bslang
   }
// ^ source.bslang entity.function.bslang punctuation.defintion.block.end.function.bslang
   
   export function test3() ~> U32{
// ^^^^^^^ source.bslang entity.function.bslang keyword.control.export.bslang
//        ^^^^^^^^ source.bslang entity.function.bslang storage.type.function.bslang
//                ^ source.bslang entity.function.bslang
//                 ^^^^^ source.bslang entity.function.bslang entity.name.function.bslang
//                      ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.begin.bslang
//                       ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.end.bslang
//                        ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang
//                         ^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang keyword.operator.return_type.bslang
//                           ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang
//                            ^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.builtin.bslang
//                               ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.defintion.block.begin.function.bslang
       return get_u32('s', 987_254, test(), var);
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//     ^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang keyword.control.return.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//            ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.function.call.bslang entity.name.function.call.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.function.call.bslang meta.brace.round.function_call.begin.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.function.call.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.function.call.bslang entity.literal.char.bslang entity.literal.char.bslang string.quotes.single.char_literal.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.function.call.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.function.call.bslang punctuation.separator.comma.function.arguments.bslang
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.function.call.bslang
//                         ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.function.call.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.function.call.bslang punctuation.separator.comma.function.arguments.bslang
//                                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.function.call.bslang
//                                  ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.function.call.bslang entity.function.call.bslang entity.name.function.call.bslang
//                                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.function.call.bslang entity.function.call.bslang meta.brace.round.function_call.begin.bslang
//                                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.function.call.bslang entity.function.call.bslang meta.brace.round.function_call.end.bslang
//                                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.function.call.bslang punctuation.separator.comma.function.arguments.bslang
//                                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.function.call.bslang
//                                          ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.function.call.bslang variable.name.bslang
//                                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.function.call.bslang meta.brace.round.function_call.end.bslang
//                                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang punctuation.terminator.return.bslang
   }
// ^ source.bslang entity.function.bslang punctuation.defintion.block.end.function.bslang
   
   
   export function get_array() ~> [Bool; 4]{
// ^^^^^^^ source.bslang entity.function.bslang keyword.control.export.bslang
//        ^^^^^^^^ source.bslang entity.function.bslang storage.type.function.bslang
//                ^ source.bslang entity.function.bslang
//                 ^^^^^^^^^ source.bslang entity.function.bslang entity.name.function.bslang
//                          ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.begin.bslang
//                           ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.end.bslang
//                            ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang
//                             ^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang keyword.operator.return_type.bslang
//                               ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang
//                                ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.array.bslang punctuation.definition.type.array.begin.bslang
//                                 ^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.array.bslang entity.name.type.builtin.bslang
//                                     ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang punctuation.separator.type.array.with_length.bslang
//                                      ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang
//                                       ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang constant.numeric.bslang
//                                        ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.array.bslang punctuation.definition.type.array.end.bslang
//                                         ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.defintion.block.begin.function.bslang
       bsm {
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang keyword.control.bsm.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.definition.bsm.begin.bslang
           checkpoint 3
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang meta.embedded.bssembler
//         ^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang meta.embedded.bssembler keyword.control.bssembler
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang meta.embedded.bssembler
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang meta.embedded.bssembler constant.numeric
       } 
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.definition.bsm.end.bslang
//      ^^ source.bslang entity.function.bslang entity.function.body.bslang
       
       if n > 1 { return 1; }
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang
//     ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang keyword.control.if.bslang
//       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang
//        ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang keyword.operator.binary.compare.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang punctuation.definition.if.branch.begin.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.branch.body.bslang entity.return.value.bslang
//                ^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.branch.body.bslang entity.return.value.bslang keyword.control.return.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.branch.body.bslang entity.return.value.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.branch.body.bslang entity.return.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.branch.body.bslang entity.return.value.bslang punctuation.terminator.return.bslang
//                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang punctuation.definition.if.branch.end.bslang
       return [false, false, true, false];
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//     ^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang keyword.control.return.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang meta.block.array_literal.begin.bslang meta.brace.square.array_literal.begin.bslang
//             ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang constant.language.boolean.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang
//                    ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang constant.language.boolean.bslang
//                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang
//                           ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang constant.language.boolean.bslang
//                               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang
//                                 ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang constant.language.boolean.bslang
//                                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang meta.block.array_literal.end.bslang meta.brace.square.array_literal.end.bslang
//                                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang punctuation.terminator.return.bslang
   }
// ^ source.bslang entity.function.bslang punctuation.defintion.block.end.function.bslang
   
   //TODO fix the difference between types and return types with ~>!
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.line.double-slash.bslang
   /* function complex_fn(fn_input: Function(Char, Bool) ~> [Bool]) ~> (Function(U32) ~> [Bool; 8]){
// ^^ source.bslang comment.block.bslang
//   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
       return get_array;
// ^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
   } */
// ^^ source.bslang comment.block.bslang
//   ^^ source.bslang comment.block.bslang
   
   
   function defaults(c: Char = '\n', f:U32 = 4_232_321, a : [Bool; 2] = [false, true], h:S = S{n:4,b:false}, n:Nothing = nothing) ~> [Nothing; 3]{
// ^^^^^^^^ source.bslang entity.function.bslang storage.type.function.bslang
//         ^ source.bslang entity.function.bslang
//          ^^^^^^^^ source.bslang entity.function.bslang entity.name.function.bslang
//                  ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.begin.bslang
//                   ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang meta.parameter.name.bslang
//                    ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.colon.paramter.type.bslang
//                     ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang
//                      ^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.builtin.bslang
//                          ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang
//                           ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang keyword.operator.assignment.default_parameter.bslang
//                            ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang
//                             ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.literal.char.escaped.bslang entity.literal.char.escaped.bslang punctuation.char_literal.bslang
//                              ^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.literal.char.escaped.bslang entity.literal.char.escaped.bslang constant.character.escape.bslang
//                                ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.literal.char.escaped.bslang entity.literal.char.escaped.bslang punctuation.char_literal.bslang
//                                 ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.comma.function.paramter.bslang
//                                  ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang
//                                   ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang meta.parameter.name.bslang
//                                    ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.colon.paramter.type.bslang
//                                     ^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.builtin.bslang
//                                        ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang
//                                         ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang keyword.operator.assignment.default_parameter.bslang
//                                          ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang
//                                           ^^^^^^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                                    ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.comma.function.paramter.bslang
//                                                     ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang
//                                                      ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang meta.parameter.name.bslang
//                                                       ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang
//                                                        ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.colon.paramter.type.bslang
//                                                         ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang
//                                                          ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.array.bslang punctuation.definition.type.array.begin.bslang
//                                                           ^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.array.bslang entity.name.type.builtin.bslang
//                                                               ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang punctuation.separator.type.array.with_length.bslang
//                                                                ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang
//                                                                 ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang constant.numeric.bslang
//                                                                  ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.array.bslang punctuation.definition.type.array.end.bslang
//                                                                   ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang
//                                                                    ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang keyword.operator.assignment.default_parameter.bslang
//                                                                     ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang
//                                                                      ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.array.literal.bslang meta.block.array_literal.begin.bslang meta.brace.square.array_literal.begin.bslang
//                                                                       ^^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.array.literal.bslang constant.language.boolean.bslang
//                                                                            ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                                                                             ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.array.literal.bslang
//                                                                              ^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.array.literal.bslang constant.language.boolean.bslang
//                                                                                  ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.array.literal.bslang meta.block.array_literal.end.bslang meta.brace.square.array_literal.end.bslang
//                                                                                   ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.comma.function.paramter.bslang
//                                                                                    ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang
//                                                                                     ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang meta.parameter.name.bslang
//                                                                                      ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.colon.paramter.type.bslang
//                                                                                       ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.custom.bslang
//                                                                                        ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang
//                                                                                         ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang keyword.operator.assignment.default_parameter.bslang
//                                                                                          ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang
//                                                                                           ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.struct.literal.bslang entity.name.type.bslang
//                                                                                            ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.struct.literal.bslang meta.block.struct_literal.begin.bslang
//                                                                                             ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.struct.literal.bslang entity.struct_field.bslang variable.name.struct_literal.bslang
//                                                                                              ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.struct.literal.bslang entity.struct_field.bslang punctuation.separator.colon.struct.literal.bslang
//                                                                                               ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.struct.literal.bslang entity.struct_field.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                                                                                ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.struct.literal.bslang entity.struct_field.bslang punctuation.separator.comma.struct_literal.member.bslang
//                                                                                                 ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.struct.literal.bslang entity.struct_field.bslang variable.name.struct_literal.bslang
//                                                                                                  ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.struct.literal.bslang entity.struct_field.bslang punctuation.separator.colon.struct.literal.bslang
//                                                                                                   ^^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.struct.literal.bslang entity.struct_field.bslang constant.language.boolean.bslang
//                                                                                                        ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.struct.literal.bslang meta.block.struct_literal.end.bslang
//                                                                                                         ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.comma.function.paramter.bslang
//                                                                                                          ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang
//                                                                                                           ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang meta.parameter.name.bslang
//                                                                                                            ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.colon.paramter.type.bslang
//                                                                                                             ^^^^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.builtin.bslang
//                                                                                                                    ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang
//                                                                                                                     ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang keyword.operator.assignment.default_parameter.bslang
//                                                                                                                      ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang
//                                                                                                                       ^^^^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang constant.language.nothing.bslang
//                                                                                                                              ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.end.bslang
//                                                                                                                               ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang
//                                                                                                                                ^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang keyword.operator.return_type.bslang
//                                                                                                                                  ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang
//                                                                                                                                   ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.array.bslang punctuation.definition.type.array.begin.bslang
//                                                                                                                                    ^^^^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.array.bslang entity.name.type.builtin.bslang
//                                                                                                                                           ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang punctuation.separator.type.array.with_length.bslang
//                                                                                                                                            ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang
//                                                                                                                                             ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.array.bslang entity.name.type.array.with_length.bslang constant.numeric.bslang
//                                                                                                                                              ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.array.bslang punctuation.definition.type.array.end.bslang
//                                                                                                                                               ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.defintion.block.begin.function.bslang
       {return a;} // this is a block with a statement in one line
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.bracket.type.block.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.bracket.type.block.bslang meta.brace.curly.type.block.begin.bslang
//      ^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.bracket.type.block.bslang entity.return.value.bslang keyword.control.return.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.bracket.type.block.bslang entity.return.value.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.bracket.type.block.bslang entity.return.value.bslang variable.name.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.bracket.type.block.bslang entity.return.value.bslang punctuation.terminator.return.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.bracket.type.block.bslang meta.brace.curly.type.block.end.bslang
//                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
       return [nothing, nothing, nothing];
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//     ^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang keyword.control.return.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang meta.block.array_literal.begin.bslang meta.brace.square.array_literal.begin.bslang
//             ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang constant.language.nothing.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang
//                      ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang constant.language.nothing.bslang
//                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang
//                               ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang constant.language.nothing.bslang
//                                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang entity.array.literal.bslang meta.block.array_literal.end.bslang meta.brace.square.array_literal.end.bslang
//                                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang punctuation.terminator.return.bslang
   }
// ^ source.bslang entity.function.bslang punctuation.defintion.block.end.function.bslang
   
   //TODO string literals are not supported atm!
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.line.double-slash.bslang
   /*
// ^^ source.bslang comment.block.bslang
   function get_string() ~> String {
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
       return "test with \" escape and \t \n \0 \\";
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.block.bslang
   }
// ^^ source.bslang comment.block.bslang
   
   */
// ^^ source.bslang comment.block.bslang
   
   function main() ~> Nothing {
// ^^^^^^^^ source.bslang entity.function.bslang storage.type.function.bslang
//         ^ source.bslang entity.function.bslang
//          ^^^^ source.bslang entity.function.bslang entity.name.function.bslang
//              ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.begin.bslang
//               ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.end.bslang
//                ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang
//                 ^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang keyword.operator.return_type.bslang
//                   ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang
//                    ^^^^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.builtin.bslang
//                           ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang
//                            ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.defintion.block.begin.function.bslang
       let p: U32;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang variable.name.local_variable.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang punctuation.separator.colon.variable_type.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang
//            ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang entity.name.type.builtin.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang punctuation.separator.comma.variable.declaration.bslang
       p = 0xCAFFE;  //comment after something
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang
//       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang
//         ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang constant.numeric.bslang entity.literal.numeric.hexadecimal.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang punctuation.separator.comma.variable.assigment.bslang
//                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
       p = 0o767313;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang
//       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang
//         ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang constant.numeric.bslang entity.literal.numeric.octal.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang punctuation.separator.comma.variable.assigment.bslang
       p = 0b10100010;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang
//       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang
//         ^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang constant.numeric.bslang entity.literal.numeric.binary.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang punctuation.separator.comma.variable.assigment.bslang
       let a = 4_200;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang variable.name.local_variable.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang keyword.operator.assignment.local_variable.initialization.without_type.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//             ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang punctuation.separator.comma.variable.declaration.bslang
       let b: Bool = false;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//            ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                   ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.language.boolean.bslang
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
       let c: Bool = true;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//            ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                   ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.language.boolean.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
       call(not b);
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang
//     ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang entity.name.function.call.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang meta.brace.round.function_call.begin.bslang
//          ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang entity.operator.unary_operator.prefix.not.bslang keyword.operator.unary.prefix.not.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang variable.name.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang meta.brace.round.function_call.end.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.terminator.function_call.bslang
       std::assert(not b);
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.namespace.usage.bslang entity.name.namespace.usage.bslang
//        ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.namespace.usage.bslang punctuation.separator.namespace.access.bslang
//          ^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang entity.name.function.call.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang meta.brace.round.function_call.begin.bslang
//                 ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang entity.operator.unary_operator.prefix.not.bslang keyword.operator.unary.prefix.not.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang variable.name.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang meta.brace.round.function_call.end.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.terminator.function_call.bslang
       let d: Char = 'a';
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//            ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.literal.char.bslang entity.literal.char.bslang string.quotes.single.char_literal.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
       d = 'a';
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang
//       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang entity.literal.char.bslang entity.literal.char.bslang string.quotes.single.char_literal.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang punctuation.separator.comma.variable.assigment.bslang
       '\n';
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.literal.char.escaped.bslang entity.literal.char.escaped.bslang punctuation.char_literal.bslang
//      ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.literal.char.escaped.bslang entity.literal.char.escaped.bslang constant.character.escape.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.literal.char.escaped.bslang entity.literal.char.escaped.bslang punctuation.char_literal.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.terminator.literal.bslang
       ' ';
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.literal.char.bslang entity.literal.char.bslang string.quotes.single.char_literal.bslang
//       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.terminator.literal.bslang
       '\\';
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.literal.char.escaped.bslang entity.literal.char.escaped.bslang punctuation.char_literal.bslang
//      ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.literal.char.escaped.bslang entity.literal.char.escaped.bslang constant.character.escape.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.literal.char.escaped.bslang entity.literal.char.escaped.bslang punctuation.char_literal.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.terminator.literal.bslang
       '\';
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.literal.char.invalid.bslang entity.literal.char.invalid.bslang punctuation.char_literal.bslang
//      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.literal.char.invalid.bslang entity.literal.char.invalid.bslang invalid.illegal.bslang
//       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.literal.char.invalid.bslang entity.literal.char.invalid.bslang punctuation.char_literal.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.terminator.literal.bslang
       '~';
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.literal.char.bslang entity.literal.char.bslang string.quotes.single.char_literal.bslang
//       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.terminator.literal.bslang
       '"';
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.literal.char.bslang entity.literal.char.bslang string.quotes.single.char_literal.bslang
//       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.terminator.literal.bslang
   
       let ptr: mutable Function(U32) ~> Bool = f;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//              ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang storage.modifier.mutable.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang
//                      ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.keyword.bslang
//                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.function.with_return.bslang punctuation.definition.type.function.with_return.begin.bslang
//                               ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.function.with_return.bslang entity.name.type.builtin.bslang
//                                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang punctuation.definition.type.function.with_return.end.bslang
//                                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang
//                                    ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang keyword.operator.return_type.bslang
//                                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.function.with_return.bslang
//                                       ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.function.with_return.bslang entity.name.type.builtin.bslang
//                                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                                            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang variable.name.bslang
//                                               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
       let ptr2: mutable -> mutable U32 = a@;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//               ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang storage.modifier.mutable.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang
//                       ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.pointer.bslang keyword.operator.pointer.bslang
//                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.pointer.bslang
//                          ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang storage.modifier.mutable.bslang
//                                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang
//                                  ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.operator.unary_operator.postfix.pointer.access.bslang variable.name.bslang
//                                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.operator.unary_operator.postfix.pointer.access.bslang keyword.operator.unary.postfix.pointer.access.bslang
//                                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
       //TODO: is there a nullptr or similar keyword?
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
       let long_ptr: -> -> -> -> U32 = 0;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                   ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.pointer.bslang keyword.operator.pointer.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.pointer.bslang
//                      ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.pointer.bslang keyword.operator.pointer.bslang
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.pointer.bslang
//                         ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.pointer.bslang keyword.operator.pointer.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.pointer.bslang
//                            ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.pointer.bslang keyword.operator.pointer.bslang
//                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.pointer.bslang
//                               ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
       let functions = [f, g, f, f, f, g];
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//         ^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang variable.name.local_variable.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang keyword.operator.assignment.local_variable.initialization.without_type.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang meta.block.array_literal.begin.bslang meta.brace.square.array_literal.begin.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang variable.name.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang
//                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang variable.name.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang
//                            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang variable.name.bslang
//                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang
//                               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang variable.name.bslang
//                                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang
//                                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang variable.name.bslang
//                                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang
//                                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang variable.name.bslang
//                                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang meta.block.array_literal.end.bslang meta.brace.square.array_literal.end.bslang
//                                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang punctuation.separator.comma.variable.declaration.bslang
       let num_functions = value_size(functions) / value_size(functions[0]);
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//         ^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang variable.name.local_variable.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang keyword.operator.assignment.local_variable.initialization.without_type.bslang
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//                         ^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.function.call.bslang entity.name.function.call.bslang
//                                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.function.call.bslang meta.brace.round.function_call.begin.bslang
//                                    ^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.function.call.bslang variable.name.bslang
//                                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.function.call.bslang meta.brace.round.function_call.end.bslang
//                                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//                                               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang keyword.operator.binary.numeric.bslang
//                                                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//                                                 ^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.function.call.bslang entity.name.function.call.bslang
//                                                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.function.call.bslang meta.brace.round.function_call.begin.bslang
//                                                            ^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.function.call.bslang variable.name.bslang
//                                                                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.function.call.bslang entity.operator.unary_operator.postfix.array.index.bslang meta.brace.square.operator.unary.postfix.array.index.begin.bslang
//                                                                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.function.call.bslang entity.operator.unary_operator.postfix.array.index.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                                                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.function.call.bslang entity.operator.unary_operator.postfix.array.index.bslang meta.brace.square.operator.unary.postfix.array.index.end.bslang
//                                                                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.function.call.bslang meta.brace.round.function_call.end.bslang
//                                                                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang punctuation.separator.comma.variable.declaration.bslang
       let func_with_return : Function(U32) ~> Nothing;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang
//         ^^^^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang variable.name.local_variable.bslang
//                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang punctuation.separator.colon.variable_type.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang
//                            ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang entity.name.type.function.with_return.bslang entity.name.type.function.keyword.bslang
//                                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang entity.name.type.function.with_return.bslang punctuation.definition.type.function.with_return.begin.bslang
//                                     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang entity.name.type.function.with_return.bslang entity.name.type.builtin.bslang
//                                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang punctuation.definition.type.function.with_return.end.bslang
//                                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang
//                                          ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang entity.name.type.function.with_return.bslang entity.name.type.function.return_type.bslang keyword.operator.return_type.bslang
//                                            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang entity.name.type.function.with_return.bslang
//                                             ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang entity.name.type.function.with_return.bslang entity.name.type.builtin.bslang
//                                                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.bslang punctuation.separator.comma.variable.declaration.bslang
   
       loop {
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang
//     ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang keyword.control.raw.loop.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang punctuation.definition.raw.loop.begin.bslang
           // test comment inside here
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang comment.line.double-slash.bslang
           function s(){
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.function.bslang keyword.control.export.bslang
//         ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.function.bslang storage.type.function.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.function.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.function.bslang entity.name.function.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.begin.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.end.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.function.bslang entity.function.body.bslang punctuation.defintion.block.begin.function.bslang
               return nothing;
// ^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//             ^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang keyword.control.return.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//                    ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang constant.language.nothing.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang punctuation.terminator.return.bslang
           }
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.function.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.function.bslang punctuation.defintion.block.end.function.bslang
           break;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.loop.break.bslang
//         ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.loop.break.bslang keyword.control.loop.break.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.loop.break.bslang punctuation.terminator.loop.break.bslang
           let z = [8];
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.without_type.bslang
//         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.without_type.bslang storage.type.let.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.without_type.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.without_type.bslang variable.name.local_variable.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.without_type.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang keyword.operator.assignment.local_variable.initialization.without_type.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.operator.unary_operator.postfix.array.index.bslang meta.brace.square.operator.unary.postfix.array.index.begin.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.operator.unary_operator.postfix.array.index.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.operator.unary_operator.postfix.array.index.bslang meta.brace.square.operator.unary.postfix.array.index.end.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.without_type.bslang punctuation.separator.comma.variable.declaration.bslang
           continue;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.loop.continue.bslang
//         ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.loop.continue.bslang keyword.control.loop.continue.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.loop.continue.bslang punctuation.terminator.loop.continue.bslang
       }
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang punctuation.definition.raw.loop.end.bslang
   
       let i = 's' > 2;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang variable.name.local_variable.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang keyword.operator.assignment.local_variable.initialization.without_type.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.literal.char.bslang entity.literal.char.bslang string.quotes.single.char_literal.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang keyword.operator.binary.compare.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang punctuation.separator.comma.variable.declaration.bslang
       let j = ('s' > 'a') > 2;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang variable.name.local_variable.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang keyword.operator.assignment.local_variable.initialization.without_type.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.bracket.type.expression.bslang meta.brace.round.rvalue.expression.begin.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.bracket.type.expression.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.bracket.type.expression.bslang entity.literal.char.bslang entity.literal.char.bslang string.quotes.single.char_literal.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.bracket.type.expression.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.bracket.type.expression.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.bracket.type.expression.bslang keyword.operator.binary.compare.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.bracket.type.expression.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.bracket.type.expression.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.bracket.type.expression.bslang entity.literal.char.bslang entity.literal.char.bslang string.quotes.single.char_literal.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.bracket.type.expression.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.bracket.type.expression.bslang meta.brace.round.rvalue.expression.end.bslang
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang keyword.operator.binary.compare.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang punctuation.separator.comma.variable.declaration.bslang
       let z: U32 = 1 + 1;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//            ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.operator.unary_operator.prefix.numeric.bslang keyword.operator.unary.prefix.numeric.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
       let z1: U32 = -1;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//             ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.operator.unary_operator.prefix.numeric.bslang keyword.operator.unary.prefix.numeric.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
       let z2: U32 = + (-1);
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//             ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.operator.unary_operator.prefix.numeric.bslang keyword.operator.unary.prefix.numeric.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.bracket.type.expression.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.bracket.type.expression.bslang meta.brace.round.rvalue.expression.begin.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.bracket.type.expression.bslang entity.operator.unary_operator.prefix.numeric.bslang keyword.operator.unary.prefix.numeric.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.bracket.type.expression.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.bracket.type.expression.bslang meta.brace.round.rvalue.expression.end.bslang
//                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
       let z3: Bool = f(1) > g([1,3,4]); 
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//             ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.function.call.bslang entity.name.function.call.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.function.call.bslang meta.brace.round.function_call.begin.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.function.call.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.function.call.bslang meta.brace.round.function_call.end.bslang
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.binary.compare.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.function.call.bslang entity.name.function.call.bslang
//                            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.function.call.bslang meta.brace.round.function_call.begin.bslang
//                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.function.call.bslang entity.array.literal.bslang meta.block.array_literal.begin.bslang meta.brace.square.array_literal.begin.bslang
//                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.function.call.bslang entity.array.literal.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.function.call.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.function.call.bslang entity.array.literal.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.function.call.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.function.call.bslang entity.array.literal.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.function.call.bslang entity.array.literal.bslang meta.block.array_literal.end.bslang meta.brace.square.array_literal.end.bslang
//                                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.function.call.bslang meta.brace.round.function_call.end.bslang
//                                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
//                                      ^^ source.bslang entity.function.bslang entity.function.body.bslang
       let z4: U32 = 0b100100 or 0b10001; 
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//             ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                   ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.binary.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                            ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.binary.bitwise.bslang
//                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                               ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.binary.bslang
//                                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
//                                       ^^ source.bslang entity.function.bslang entity.function.body.bslang
       let z5: U32 = (o > 1) ? 1 : 0;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//             ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.bracket.type.expression.bslang meta.brace.round.rvalue.expression.begin.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.bracket.type.expression.bslang variable.name.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.bracket.type.expression.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.bracket.type.expression.bslang keyword.operator.binary.compare.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.bracket.type.expression.bslang
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.bracket.type.expression.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.bracket.type.expression.bslang meta.brace.round.rvalue.expression.end.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.tertiary.elvis.start.bslang
//                            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.tertiary.elvis.end.bslang
//                                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
       let z6: U32 = 982 * 0xFF; 
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//             ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                   ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.binary.numeric.bslang
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                         ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.hexadecimal.bslang
//                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
//                              ^^ source.bslang entity.function.bslang entity.function.body.bslang
       let z7: U32 = 982 mod 0xFF; 
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//             ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                   ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                       ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.binary.numeric.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                           ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.hexadecimal.bslang
//                               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
//                                ^^ source.bslang entity.function.bslang entity.function.body.bslang
       let z8: U32 = 982 << 0xFF; 
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//             ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                   ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                       ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.binary.bitwise.bslang
//                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                          ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.hexadecimal.bslang
//                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
//                               ^^ source.bslang entity.function.bslang entity.function.body.bslang
       let z9: U32 = 982 / 0xFF; 
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//             ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                   ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.binary.numeric.bslang
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                         ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.hexadecimal.bslang
//                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
//                              ^^ source.bslang entity.function.bslang entity.function.body.bslang
       let u = not 0;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang variable.name.local_variable.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang keyword.operator.assignment.local_variable.initialization.without_type.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//             ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.operator.unary_operator.prefix.not.bslang keyword.operator.unary.prefix.not.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang punctuation.separator.comma.variable.declaration.bslang
       let arr = [not true, not false];
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang variable.name.local_variable.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang keyword.operator.assignment.local_variable.initialization.without_type.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang meta.block.array_literal.begin.bslang meta.brace.square.array_literal.begin.bslang
//                ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang entity.operator.unary_operator.prefix.not.bslang keyword.operator.unary.prefix.not.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang
//                    ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang constant.language.boolean.bslang
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang
//                          ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang entity.operator.unary_operator.prefix.not.bslang keyword.operator.unary.prefix.not.bslang
//                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang
//                              ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang constant.language.boolean.bslang
//                                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.array.literal.bslang meta.block.array_literal.end.bslang meta.brace.square.array_literal.end.bslang
//                                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang punctuation.separator.comma.variable.declaration.bslang
   
       let l = call(1)[4];
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang variable.name.local_variable.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang keyword.operator.assignment.local_variable.initialization.without_type.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//             ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.function.call.bslang entity.name.function.call.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.function.call.bslang meta.brace.round.function_call.begin.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.function.call.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.function.call.bslang meta.brace.round.function_call.end.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.operator.unary_operator.postfix.array.index.bslang meta.brace.square.operator.unary.postfix.array.index.begin.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.operator.unary_operator.postfix.array.index.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.operator.unary_operator.postfix.array.index.bslang meta.brace.square.operator.unary.postfix.array.index.end.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang punctuation.separator.comma.variable.declaration.bslang
       let begin = functions[1]@;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//         ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang variable.name.local_variable.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang keyword.operator.assignment.local_variable.initialization.without_type.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//                 ^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang variable.name.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.operator.unary_operator.postfix.array.index.bslang meta.brace.square.operator.unary.postfix.array.index.begin.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.operator.unary_operator.postfix.array.index.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.operator.unary_operator.postfix.array.index.bslang meta.brace.square.operator.unary.postfix.array.index.end.bslang
//                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.operator.unary_operator.postfix.pointer.access.bslang keyword.operator.unary.postfix.pointer.access.bslang
//                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang punctuation.separator.comma.variable.declaration.bslang
       let functions = h;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//         ^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang variable.name.local_variable.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang keyword.operator.assignment.local_variable.initialization.without_type.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang variable.name.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang punctuation.separator.comma.variable.declaration.bslang
   
       for let i: mutable U32 = n; i < 20; i = i + 1 {
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang keyword.control.for.loop.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang
//         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang storage.modifier.mutable.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang
//                        ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang variable.name.bslang
//                               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
//                                ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.condition.bslang
//                                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.condition.bslang keyword.operator.binary.compare.bslang
//                                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.condition.bslang
//                                     ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.condition.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.condition.bslang punctuation.separator.comma.for.loop.condition.end.bslan
//                                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang entity.variable.assignment.bslang
//                                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//                                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang entity.variable.assignment.bslang
//                                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//                                            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang entity.variable.assignment.bslang
//                                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang entity.variable.assignment.bslang variable.name.bslang
//                                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang entity.variable.assignment.bslang
//                                               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang entity.variable.assignment.bslang entity.operator.unary_operator.prefix.numeric.bslang keyword.operator.unary.prefix.numeric.bslang
//                                                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang entity.variable.assignment.bslang
//                                                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang entity.variable.assignment.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang
//                                                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang punctuation.definition.for.loop.begin.bslang
           let n_plus_k: U32 = n + k;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang
//         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang
//             ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                       ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang variable.name.bslang
//                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.operator.unary_operator.prefix.numeric.bslang keyword.operator.unary.prefix.numeric.bslang
//                                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang variable.name.bslang
//                                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
           let z : mutable U32 = [1, 3252, 32_322][2];
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang
//         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                 ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang storage.modifier.mutable.bslang
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang
//                         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.array.literal.bslang meta.block.array_literal.begin.bslang meta.brace.square.array_literal.begin.bslang
//                                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.array.literal.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.array.literal.bslang
//                                   ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.array.literal.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.array.literal.bslang
//                                         ^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.array.literal.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.array.literal.bslang meta.block.array_literal.end.bslang meta.brace.square.array_literal.end.bslang
//                                                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.operator.unary_operator.postfix.array.index.bslang meta.brace.square.operator.unary.postfix.array.index.begin.bslang
//                                                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.operator.unary_operator.postfix.array.index.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.operator.unary_operator.postfix.array.index.bslang meta.brace.square.operator.unary.postfix.array.index.end.bslang
//                                                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
           n = k;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang variable.name.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang punctuation.separator.comma.variable.assigment.bslang
           k = n_plus_k;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//             ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang variable.name.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang punctuation.separator.comma.variable.assigment.bslang
       }
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang punctuation.definition.for.loop.end.bslang
   
       while true {
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang
//     ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang keyword.control.while.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang
//           ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.while.loop.start.bslang entity.while.loop.condition.bslang constant.language.boolean.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.while.loop.start.bslang entity.while.loop.condition.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.while.loop.start.bslang punctuation.definition.while.loop.begin.bslang
           break;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.loop.break.bslang
//         ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.loop.break.bslang keyword.control.loop.break.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.loop.break.bslang punctuation.terminator.loop.break.bslang
           continue;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.loop.continue.bslang
//         ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.loop.continue.bslang keyword.control.loop.continue.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.loop.continue.bslang punctuation.terminator.loop.continue.bslang
       }
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang punctuation.definition.while.loop.end.bslang
   
       let n: mutable U32 = 1;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//            ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang storage.modifier.mutable.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang
//                    ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
       let k: mutable U32 = 0;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//            ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang storage.modifier.mutable.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang
//                    ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
       while n < 100 {
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang
//     ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang keyword.control.while.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang
//           ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.while.loop.start.bslang entity.while.loop.condition.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.while.loop.start.bslang entity.while.loop.condition.bslang keyword.operator.binary.compare.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.while.loop.start.bslang entity.while.loop.condition.bslang
//               ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.while.loop.start.bslang entity.while.loop.condition.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.while.loop.start.bslang entity.while.loop.condition.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.while.loop.start.bslang punctuation.definition.while.loop.begin.bslang
           let n_plus_k: U32 = n + k;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang
//         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang
//             ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                       ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang variable.name.bslang
//                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.operator.unary_operator.prefix.numeric.bslang keyword.operator.unary.prefix.numeric.bslang
//                                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang variable.name.bslang
//                                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
           k = n;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang variable.name.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang punctuation.separator.comma.variable.assigment.bslang
           n = n_plus_k;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//             ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang variable.name.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang punctuation.separator.comma.variable.assigment.bslang
           continue;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.loop.continue.bslang
//         ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.loop.continue.bslang keyword.control.loop.continue.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.loop.continue.bslang punctuation.terminator.loop.continue.bslang
           n = 10000;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//             ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang punctuation.separator.comma.variable.assigment.bslang
       }
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.while.loop.bslang punctuation.definition.while.loop.end.bslang
   
       for ;; {
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang keyword.control.for.loop.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang punctuation.separator.comma.for.loop.declaration.end.bslan
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.condition.bslang punctuation.separator.comma.for.loop.condition.end.bslan
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang punctuation.definition.for.loop.begin.bslang
           break;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.loop.break.bslang
//         ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.loop.break.bslang keyword.control.loop.break.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.loop.break.bslang punctuation.terminator.loop.break.bslang
           continue;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.loop.continue.bslang
//         ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.loop.continue.bslang keyword.control.loop.continue.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.loop.continue.bslang punctuation.terminator.loop.continue.bslang
           let i: U32 = 0;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang
//         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
       }
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang punctuation.definition.for.loop.end.bslang
       
     
   
       for (let i: U32 = variable; cond; cond = false) {
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang keyword.control.for.loop.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang
//          ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                 ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                       ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang variable.name.bslang
//                               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.declaration.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
//                                ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.condition.bslang
//                                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.condition.bslang punctuation.separator.comma.for.loop.condition.end.bslan
//                                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang entity.variable.assignment.bslang
//                                       ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//                                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang entity.variable.assignment.bslang
//                                            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//                                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang entity.variable.assignment.bslang
//                                              ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang entity.variable.assignment.bslang constant.language.boolean.bslang
//                                                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang entity.variable.assignment.bslang
//                                                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang entity.for.loop.increment.bslang
//                                                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.for.loop.start.bslang punctuation.definition.for.loop.begin.bslang
           variable;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang
//         ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang punctuation.terminator.literal.bslang
           std::assert_equals(variable, 42);
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang
//         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.namespace.usage.bslang entity.name.namespace.usage.bslang
//            ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.namespace.usage.bslang punctuation.separator.namespace.access.bslang
//              ^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang entity.name.function.call.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang meta.brace.round.function_call.begin.bslang
//                            ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang variable.name.bslang
//                                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang punctuation.separator.comma.function.arguments.bslang
//                                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang
//                                      ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang meta.brace.round.function_call.end.bslang
//                                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang punctuation.terminator.function_call.bslang
           i;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang punctuation.terminator.literal.bslang
           std::assert_equals(i, 42);
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang
//         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.namespace.usage.bslang entity.name.namespace.usage.bslang
//            ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.namespace.usage.bslang punctuation.separator.namespace.access.bslang
//              ^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang entity.name.function.call.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang meta.brace.round.function_call.begin.bslang
//                            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang variable.name.bslang
//                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang punctuation.separator.comma.function.arguments.bslang
//                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang
//                               ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang meta.brace.round.function_call.end.bslang
//                                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang punctuation.terminator.function_call.bslang
           let variable: U32 = 0;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang
//         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang
//             ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                       ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
           std::assert_equals(variable, 0);
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang
//         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.namespace.usage.bslang entity.name.namespace.usage.bslang
//            ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.namespace.usage.bslang punctuation.separator.namespace.access.bslang
//              ^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang entity.name.function.call.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang meta.brace.round.function_call.begin.bslang
//                            ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang variable.name.bslang
//                                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang punctuation.separator.comma.function.arguments.bslang
//                                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang
//                                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang meta.brace.round.function_call.end.bslang
//                                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang punctuation.terminator.function_call.bslang
           std::assert_equals(i, 42);
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang
//         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.namespace.usage.bslang entity.name.namespace.usage.bslang
//            ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.namespace.usage.bslang punctuation.separator.namespace.access.bslang
//              ^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang entity.name.function.call.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang meta.brace.round.function_call.begin.bslang
//                            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang variable.name.bslang
//                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang punctuation.separator.comma.function.arguments.bslang
//                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang
//                               ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.function.call.bslang meta.brace.round.function_call.end.bslang
//                                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang punctuation.terminator.function_call.bslang
   
           if 7 > n {
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.if.branch.bslang
//         ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.if.branch.bslang keyword.control.if.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.if.branch.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang keyword.operator.binary.compare.bslang
//               ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang punctuation.definition.if.branch.begin.bslang
               // break should be allowed here
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.branch.body.bslang comment.line.double-slash.bslang
               break;
// ^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.branch.body.bslang entity.loop.break.bslang
//             ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.branch.body.bslang entity.loop.break.bslang keyword.control.loop.break.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.branch.body.bslang entity.loop.break.bslang punctuation.terminator.loop.break.bslang
           }
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.if.branch.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang entity.loop.body.bslang entity.if.branch.bslang punctuation.definition.if.branch.end.bslang
       }
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.for.loop.bslang punctuation.definition.for.loop.end.bslang
   
       function s(){
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.bslang keyword.control.export.bslang
//     ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.bslang storage.type.function.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.bslang entity.name.function.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.begin.bslang
//                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.end.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.bslang entity.function.body.bslang punctuation.defintion.block.begin.function.bslang
           return true;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//         ^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang keyword.control.return.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//                ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang constant.language.boolean.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang punctuation.terminator.return.bslang
       }
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.function.bslang punctuation.defintion.block.end.function.bslang
   
   
       if n > 4 {
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang
//     ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang keyword.control.if.bslang
//       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang
//        ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang keyword.operator.binary.compare.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang punctuation.definition.if.branch.begin.bslang
           bsm {
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.branch.body.bslang
//         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.branch.body.bslang keyword.control.bsm.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.branch.body.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.branch.body.bslang punctuation.definition.bsm.begin.bslang
               checkpoint 1
// ^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.branch.body.bslang meta.embedded.bssembler
//             ^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.branch.body.bslang meta.embedded.bssembler keyword.control.bssembler
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.branch.body.bslang meta.embedded.bssembler
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.branch.body.bslang meta.embedded.bssembler constant.numeric
           }
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.branch.body.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.branch.body.bslang punctuation.definition.bsm.end.bslang
       }
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang punctuation.definition.if.branch.end.bslang
       else {
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang
//     ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang keyword.control.else.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang punctuation.definition.else.branch.begin.bslang
           bsm {
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang
//         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang keyword.control.bsm.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang punctuation.definition.bsm.begin.bslang
               checkpoint 3
// ^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang meta.embedded.bssembler
//             ^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang meta.embedded.bssembler keyword.control.bssembler
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang meta.embedded.bssembler
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang meta.embedded.bssembler constant.numeric
           }
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang punctuation.definition.bsm.end.bslang
       }
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang punctuation.definition.else.branch.end.bslang
   
       if a >= b {
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang
//     ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang keyword.control.if.bslang
//       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang
//        ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang
//          ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang keyword.operator.binary.compare.bslang
//            ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang punctuation.definition.if.branch.begin.bslang
       } 
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.if.branch.bslang punctuation.definition.if.branch.end.bslang
//      ^^ source.bslang entity.function.bslang entity.function.body.bslang
       else if a < b {
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.if.branch.bslang
//     ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.if.branch.bslang keyword.control.else.if.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.if.branch.bslang
//             ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang keyword.operator.binary.compare.bslang
//                ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.if.branch.bslang entity.if.branch.start.bslang punctuation.definition.if.branch.begin.bslang
           std::assert(false);
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.if.branch.bslang entity.branch.body.bslang
//         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.if.branch.bslang entity.branch.body.bslang entity.namespace.usage.bslang entity.name.namespace.usage.bslang
//            ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.if.branch.bslang entity.branch.body.bslang entity.namespace.usage.bslang punctuation.separator.namespace.access.bslang
//              ^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.if.branch.bslang entity.branch.body.bslang entity.function.call.bslang entity.name.function.call.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.if.branch.bslang entity.branch.body.bslang entity.function.call.bslang meta.brace.round.function_call.begin.bslang
//                     ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.if.branch.bslang entity.branch.body.bslang entity.function.call.bslang constant.language.boolean.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.if.branch.bslang entity.branch.body.bslang entity.function.call.bslang meta.brace.round.function_call.end.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.if.branch.bslang entity.branch.body.bslang punctuation.terminator.function_call.bslang
       }
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.if.branch.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.if.branch.bslang punctuation.definition.else.if.branch.end.bslang
       else {
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang
//     ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang keyword.control.else.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang punctuation.definition.else.branch.begin.bslang
           std::assert(false);
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang
//         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang entity.namespace.usage.bslang entity.name.namespace.usage.bslang
//            ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang entity.namespace.usage.bslang punctuation.separator.namespace.access.bslang
//              ^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang entity.function.call.bslang entity.name.function.call.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang entity.function.call.bslang meta.brace.round.function_call.begin.bslang
//                     ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang entity.function.call.bslang constant.language.boolean.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang entity.function.call.bslang meta.brace.round.function_call.end.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang punctuation.terminator.function_call.bslang
       }
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.else.branch.bslang punctuation.definition.else.branch.end.bslang
   
       let n: mutable U32 = 1;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//            ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang storage.modifier.mutable.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang
//                    ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
       let k: mutable U32 = 0;
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//            ^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang storage.modifier.mutable.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang
//                    ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                       ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                        ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
       loop {
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang
//     ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang keyword.control.raw.loop.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang punctuation.definition.raw.loop.begin.bslang
           if n > 100 {
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.if.branch.bslang
//         ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.if.branch.bslang keyword.control.if.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.if.branch.bslang
//            ^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang keyword.operator.binary.compare.bslang
//               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang
//                ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                   ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.if.branch.bslang entity.if.branch.start.bslang punctuation.definition.if.branch.begin.bslang
               break;
// ^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.if.branch.bslang entity.branch.body.bslang entity.loop.break.bslang
//             ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.if.branch.bslang entity.branch.body.bslang entity.loop.break.bslang keyword.control.loop.break.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.if.branch.bslang entity.branch.body.bslang entity.loop.break.bslang punctuation.terminator.loop.break.bslang
           }
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.if.branch.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.if.branch.bslang punctuation.definition.if.branch.end.bslang
           let n_plus_k: U32 = n + k;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.bslang
//         ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.bslang
//             ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//                      ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                       ^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang variable.name.bslang
//                              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                               ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.operator.unary_operator.prefix.numeric.bslang keyword.operator.unary.prefix.numeric.bslang
//                                ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang variable.name.bslang
//                                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
           k = n;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang
//             ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang variable.name.bslang
//              ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang punctuation.separator.comma.variable.assigment.bslang
           n = n_plus_k;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang
//             ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang variable.name.bslang
//                     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang punctuation.separator.comma.variable.assigment.bslang
           continue;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.loop.continue.bslang
//         ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.loop.continue.bslang keyword.control.loop.continue.bslang
//                 ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.loop.continue.bslang punctuation.terminator.loop.continue.bslang
           n = 10000;
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//          ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang
//           ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//            ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang
//             ^^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang entity.variable.assignment.bslang punctuation.separator.comma.variable.assigment.bslang
       }
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang entity.raw.loop.bslang punctuation.definition.raw.loop.end.bslang
   
   }
// ^ source.bslang entity.function.bslang punctuation.defintion.block.end.function.bslang
   
   export function assert(condition: Bool) {
// ^^^^^^^ source.bslang entity.function.bslang keyword.control.export.bslang
//        ^^^^^^^^ source.bslang entity.function.bslang storage.type.function.bslang
//                ^ source.bslang entity.function.bslang
//                 ^^^^^^ source.bslang entity.function.bslang entity.name.function.bslang
//                       ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.begin.bslang
//                        ^^^^^^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang meta.parameter.name.bslang
//                                 ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.colon.paramter.type.bslang
//                                  ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang
//                                   ^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.builtin.bslang
//                                       ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.end.bslang
//                                        ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang
//                                         ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.defintion.block.begin.function.bslang
       // some comment here
// ^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
       bsm {
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang
//     ^^^ source.bslang entity.function.bslang entity.function.body.bslang keyword.control.bsm.bslang
//        ^ source.bslang entity.function.bslang entity.function.body.bslang
//         ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.definition.bsm.begin.bslang
           copy_byte *R0, R1
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang meta.embedded.bssembler
//         ^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang meta.embedded.bssembler keyword.control.bssembler
//                  ^ source.bslang entity.function.bslang entity.function.body.bslang meta.embedded.bssembler
//                   ^^^ source.bslang entity.function.bslang entity.function.body.bslang meta.embedded.bssembler variable
//                      ^^ source.bslang entity.function.bslang entity.function.body.bslang meta.embedded.bssembler
//                        ^^ source.bslang entity.function.bslang entity.function.body.bslang meta.embedded.bssembler variable
           assert R1, 1
// ^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang meta.embedded.bssembler
//         ^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang meta.embedded.bssembler keyword.control.bssembler
//               ^ source.bslang entity.function.bslang entity.function.body.bslang meta.embedded.bssembler
//                ^^ source.bslang entity.function.bslang entity.function.body.bslang meta.embedded.bssembler variable
//                  ^^ source.bslang entity.function.bslang entity.function.body.bslang meta.embedded.bssembler
//                    ^ source.bslang entity.function.bslang entity.function.body.bslang meta.embedded.bssembler constant.numeric
       }
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang
//     ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.definition.bsm.end.bslang
       /*
// ^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang comment.block.bslang
       a multiline comment with * in it and also /* (this is not ok for seatbelt v1 ?!?!?)
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang comment.block.bslang
       */
// ^^^^ source.bslang entity.function.bslang entity.function.body.bslang comment.block.bslang
//     ^^ source.bslang entity.function.bslang entity.function.body.bslang comment.block.bslang
   }
// ^ source.bslang entity.function.bslang punctuation.defintion.block.end.function.bslang
   
   //TODO: is this valid syntax (the default value for the parameter?)
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang comment.line.double-slash.bslang
   function def(hello: Char = '\n') ~> Char {
// ^^^^^^^^ source.bslang entity.function.bslang storage.type.function.bslang
//         ^ source.bslang entity.function.bslang
//          ^^^ source.bslang entity.function.bslang entity.name.function.bslang
//             ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.begin.bslang
//              ^^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang meta.parameter.name.bslang
//                   ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.colon.paramter.type.bslang
//                    ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang
//                     ^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.builtin.bslang
//                         ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang
//                          ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang keyword.operator.assignment.default_parameter.bslang
//                           ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang
//                            ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.literal.char.escaped.bslang entity.literal.char.escaped.bslang punctuation.char_literal.bslang
//                             ^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.literal.char.escaped.bslang entity.literal.char.escaped.bslang constant.character.escape.bslang
//                               ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.literal.char.escaped.bslang entity.literal.char.escaped.bslang punctuation.char_literal.bslang
//                                ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.end.bslang
//                                 ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang
//                                  ^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang keyword.operator.return_type.bslang
//                                    ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang
//                                     ^^^^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.builtin.bslang
//                                         ^ source.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang
//                                          ^ source.bslang entity.function.bslang entity.function.body.bslang punctuation.defintion.block.begin.function.bslang
       //TODO: is this syntax valid? (if yes, I need to implement it!)
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
       // let u, i, o : Char;
// ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
   
   }
// ^ source.bslang entity.function.bslang punctuation.defintion.block.end.function.bslang
   
   
   namespace std {
// ^^^^^^^^^ source.bslang entity.namespace.bslang keyword.control.namespace.bslang
//          ^ source.bslang entity.namespace.bslang
//           ^^^ source.bslang entity.namespace.bslang entity.name.namespace.declaration.bslang
//              ^ source.bslang entity.namespace.bslang
//               ^ source.bslang entity.namespace.bslang punctuation.definition.namespace.begin.bslang
   
       function assert_equals(lhs: Nothing, rhs: Nothing) { }
// ^^^^ source.bslang entity.namespace.bslang entity.function.bslang keyword.control.export.bslang
//     ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang storage.type.function.bslang
//             ^ source.bslang entity.namespace.bslang entity.function.bslang
//              ^^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.name.function.bslang
//                           ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.begin.bslang
//                            ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang meta.parameter.name.bslang
//                               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.colon.paramter.type.bslang
//                                ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang
//                                 ^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.builtin.bslang
//                                        ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.comma.function.paramter.bslang
//                                         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang
//                                          ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang meta.parameter.name.bslang
//                                             ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.colon.paramter.type.bslang
//                                              ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang
//                                               ^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.builtin.bslang
//                                                      ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.end.bslang
//                                                       ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang
//                                                        ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang punctuation.defintion.block.begin.function.bslang
//                                                         ^ source.bslang entity.namespace.bslang entity.function.bslang
//                                                          ^ source.bslang entity.namespace.bslang entity.function.bslang punctuation.defintion.block.end.function.bslang
   
       export function swap(lhs: ->mutable U32, rhs: ->mutable U32) {
// ^^^^ source.bslang entity.namespace.bslang entity.function.bslang
//     ^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang keyword.control.export.bslang
//            ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang storage.type.function.bslang
//                    ^ source.bslang entity.namespace.bslang entity.function.bslang
//                     ^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.name.function.bslang
//                         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.begin.bslang
//                          ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang meta.parameter.name.bslang
//                             ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.colon.paramter.type.bslang
//                              ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang
//                               ^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.pointer.bslang keyword.operator.pointer.bslang
//                                 ^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.storage.modifier.mutable.bslang storage.modifier.mutable.bslang
//                                        ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.storage.modifier.mutable.bslang
//                                         ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.builtin.bslang
//                                            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.comma.function.paramter.bslang
//                                             ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang
//                                              ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang meta.parameter.name.bslang
//                                                 ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang punctuation.separator.colon.paramter.type.bslang
//                                                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang
//                                                   ^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.pointer.bslang keyword.operator.pointer.bslang
//                                                     ^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.storage.modifier.mutable.bslang storage.modifier.mutable.bslang
//                                                            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.storage.modifier.mutable.bslang
//                                                             ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang entity.function.function_parameter.bslang entity.function.function_parameter.with_default.bslang entity.name.type.builtin.bslang
//                                                                ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.end.bslang
//                                                                 ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang
//                                                                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang punctuation.defintion.block.begin.function.bslang
               let temp: U32 = lhs!;
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//             ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//                ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//                 ^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//                     ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//                      ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                       ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                          ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                           ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                             ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.operator.unary_operator.postfix.pointer.access.bslang variable.name.bslang
//                                ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.operator.unary_operator.postfix.pointer.access.bslang keyword.operator.unary.postfix.pointer.access.bslang
//                                 ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
               lhs! = rhs!;
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang
//             ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang invalid.illegal.variable_name.bslang
//                ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang keyword.operator.unary.postfix.assignment.bslang
//                 ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang
//                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang keyword.operator.assignment.local_variable.with_operator.postfix.bslang
//                   ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang
//                    ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang entity.operator.unary_operator.postfix.pointer.access.bslang variable.name.bslang
//                       ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang entity.operator.unary_operator.postfix.pointer.access.bslang keyword.operator.unary.postfix.pointer.access.bslang
//                        ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang punctuation.separator.comma.variable.assigment.with_operator.postfix.bslang
               rhs! = temp;
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang
//             ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang invalid.illegal.variable_name.bslang
//                ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang keyword.operator.unary.postfix.assignment.bslang
//                 ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang
//                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang keyword.operator.assignment.local_variable.with_operator.postfix.bslang
//                   ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang
//                    ^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang variable.name.bslang
//                        ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang punctuation.separator.comma.variable.assigment.with_operator.postfix.bslang
       }
// ^^^^ source.bslang entity.namespace.bslang entity.function.bslang
//     ^ source.bslang entity.namespace.bslang entity.function.bslang punctuation.defintion.block.end.function.bslang
   
       function a() ~> Nothing {
// ^^^^ source.bslang entity.namespace.bslang entity.function.bslang keyword.control.export.bslang
//     ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang storage.type.function.bslang
//             ^ source.bslang entity.namespace.bslang entity.function.bslang
//              ^ source.bslang entity.namespace.bslang entity.function.bslang entity.name.function.bslang
//               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.begin.bslang
//                ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.end.bslang
//                 ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang
//                  ^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang keyword.operator.return_type.bslang
//                    ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang
//                     ^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang entity.name.type.builtin.bslang
//                            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.with_return_type.bslang entity.name.function.return_type.bslang
//                             ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang punctuation.defintion.block.begin.function.bslang
           return nothing;
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//         ^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang keyword.control.return.bslang
//               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang
//                ^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang constant.language.nothing.bslang
//                       ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.return.value.bslang punctuation.terminator.return.bslang
       }
// ^^^^ source.bslang entity.namespace.bslang entity.function.bslang
//     ^ source.bslang entity.namespace.bslang entity.function.bslang punctuation.defintion.block.end.function.bslang
   
       function t() {     
// ^^^^ source.bslang entity.namespace.bslang entity.function.bslang keyword.control.export.bslang
//     ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang storage.type.function.bslang
//             ^ source.bslang entity.namespace.bslang entity.function.bslang
//              ^ source.bslang entity.namespace.bslang entity.function.bslang entity.name.function.bslang
//               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.begin.bslang
//                ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang entity.function.argument_list.bslang punctuation.defintion.paramters.end.bslang
//                 ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.definition.bslang entity.function.definition.without_return_type.bslang
//                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang punctuation.defintion.block.begin.function.bslang
//                   ^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang
           let u : Char = '@'; 
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//             ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//              ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//                ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                 ^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                     ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                      ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                       ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                        ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//                         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.literal.char.bslang entity.literal.char.bslang string.quotes.single.char_literal.bslang
//                          ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//                           ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
//                            ^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang
           u = '=';
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang
//         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//          ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang
//           ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang
//             ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//              ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang entity.literal.char.bslang entity.literal.char.bslang string.quotes.single.char_literal.bslang
//               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//                ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang punctuation.separator.comma.variable.assigment.bslang
           u = '!';
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang
//         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//          ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang
//           ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang
//             ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//              ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang entity.literal.char.bslang entity.literal.char.bslang string.quotes.single.char_literal.bslang
//               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//                ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.bslang punctuation.separator.comma.variable.assigment.bslang
           let y: U32 = q!!;
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//             ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//              ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                   ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                    ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                     ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                      ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.operator.unary_operator.postfix.pointer.access.bslang variable.name.bslang
//                       ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.operator.unary_operator.postfix.pointer.access.bslang keyword.operator.unary.postfix.pointer.access.bslang
//                        ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.operator.unary_operator.postfix.pointer.access.bslang keyword.operator.unary.postfix.pointer.access.bslang
//                         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
   
           o! = 1;
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang
//         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang invalid.illegal.variable_name.bslang
//          ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang keyword.operator.unary.postfix.assignment.bslang
//           ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang
//            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang keyword.operator.assignment.local_variable.with_operator.postfix.bslang
//             ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang
//              ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.assignment.with_operator.postfix.bslang punctuation.separator.comma.variable.assigment.with_operator.postfix.bslang
           // TODO support nested postfix operators
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
           // also support the .field operator!
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
           //o[1]! = 12;
// ^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
           //o[1][3] = 12;
// ^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
           //o.c = 'l';
// ^^^^^^^^^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
   
           let is_not_equal = nothing != nothing;
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//         ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang storage.type.let.bslang
//            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//             ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang variable.name.local_variable.bslang
//                         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//                          ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang keyword.operator.assignment.local_variable.initialization.without_type.bslang
//                           ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//                            ^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang constant.language.nothing.bslang
//                                   ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//                                    ^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang keyword.operator.binary.compare.bslang
//                                      ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//                                       ^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang constant.language.nothing.bslang
//                                              ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang punctuation.separator.comma.variable.declaration.bslang
   
           std::assert_equals(array[2].c, 'C');   
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang
//         ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.namespace.usage.bslang entity.name.namespace.usage.bslang
//            ^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.namespace.usage.bslang punctuation.separator.namespace.access.bslang
//              ^^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang entity.name.function.call.bslang
//                           ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang meta.brace.round.function_call.begin.bslang
//                            ^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang variable.name.bslang
//                                 ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang entity.operator.unary_operator.postfix.array.index.bslang meta.brace.square.operator.unary.postfix.array.index.begin.bslang
//                                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang entity.operator.unary_operator.postfix.array.index.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                   ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang entity.operator.unary_operator.postfix.array.index.bslang meta.brace.square.operator.unary.postfix.array.index.end.bslang
//                                    ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang entity.operator.unary_operator.postfix.struct.access.bslang keyword.operator.unary.postfix.struct.access.bslang
//                                     ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang variable.name.bslang
//                                      ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang punctuation.separator.comma.function.arguments.bslang
//                                       ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang
//                                        ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//                                         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang entity.literal.char.bslang entity.literal.char.bslang string.quotes.single.char_literal.bslang
//                                          ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang entity.literal.char.bslang entity.literal.char.bslang punctuation.char_literal.bslang
//                                           ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang meta.brace.round.function_call.end.bslang
//                                            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang punctuation.terminator.function_call.bslang
//                                             ^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang
   
           let world = World {
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//         ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang storage.type.let.bslang
//            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//             ^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang variable.name.local_variable.bslang
//                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang
//                   ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang keyword.operator.assignment.local_variable.initialization.without_type.bslang
//                    ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang
//                     ^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.name.type.bslang
//                          ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang
//                           ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang meta.block.struct_literal.begin.bslang
               game_objects: game_objects@,
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang
//             ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang variable.name.struct_literal.bslang
//                         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang punctuation.separator.colon.struct.literal.bslang
//                          ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang
//                           ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.operator.unary_operator.postfix.pointer.access.bslang variable.name.bslang
//                                       ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.operator.unary_operator.postfix.pointer.access.bslang keyword.operator.unary.postfix.pointer.access.bslang
//                                        ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang punctuation.separator.comma.struct_literal.member.bslang
               test: -2,
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang
//             ^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang variable.name.struct_literal.bslang
//                 ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang punctuation.separator.colon.struct.literal.bslang
//                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang
//                   ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.operator.unary_operator.prefix.numeric.bslang keyword.operator.unary.prefix.numeric.bslang
//                    ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                     ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang punctuation.separator.comma.struct_literal.member.bslang
               test2: c!,
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang
//             ^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang variable.name.struct_literal.bslang
//                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang punctuation.separator.colon.struct.literal.bslang
//                   ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang
//                    ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.operator.unary_operator.postfix.pointer.access.bslang variable.name.bslang
//                     ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.operator.unary_operator.postfix.pointer.access.bslang keyword.operator.unary.postfix.pointer.access.bslang
//                      ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang punctuation.separator.comma.struct_literal.member.bslang
               test3: [1,2,3]@,
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang
//             ^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang variable.name.struct_literal.bslang
//                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang punctuation.separator.colon.struct.literal.bslang
//                   ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang
//                    ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.array.literal.bslang meta.block.array_literal.begin.bslang meta.brace.square.array_literal.begin.bslang
//                     ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.array.literal.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                      ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                       ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.array.literal.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                        ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.array.literal.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                          ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.array.literal.bslang meta.block.array_literal.end.bslang meta.brace.square.array_literal.end.bslang
//                           ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.operator.unary_operator.postfix.pointer.access.bslang keyword.operator.unary.postfix.pointer.access.bslang
//                            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang punctuation.separator.comma.struct_literal.member.bslang
               test4: [1,2,3][3]@,
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang
//             ^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang variable.name.struct_literal.bslang
//                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang punctuation.separator.colon.struct.literal.bslang
//                   ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang
//                    ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.array.literal.bslang meta.block.array_literal.begin.bslang meta.brace.square.array_literal.begin.bslang
//                     ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.array.literal.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                      ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                       ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.array.literal.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                        ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.array.literal.bslang punctuation.separator.comma.array_literal.bslang
//                         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.array.literal.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                          ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.array.literal.bslang meta.block.array_literal.end.bslang meta.brace.square.array_literal.end.bslang
//                           ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.array.literal.bslang meta.block.array_literal.begin.bslang meta.brace.square.array_literal.begin.bslang
//                            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.array.literal.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                             ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.array.literal.bslang meta.block.array_literal.end.bslang meta.brace.square.array_literal.end.bslang
//                              ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.operator.unary_operator.postfix.pointer.access.bslang keyword.operator.unary.postfix.pointer.access.bslang
//                               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang punctuation.separator.comma.struct_literal.member.bslang
               test5: hello.c
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang
//             ^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang variable.name.struct_literal.bslang
//                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang punctuation.separator.colon.struct.literal.bslang
//                   ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang
//                    ^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang
//                         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang entity.operator.unary_operator.postfix.struct.access.bslang keyword.operator.unary.postfix.struct.access.bslang
//                          ^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang
           };
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang entity.struct_field.bslang
//         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang entity.variable.declaration.initialization.without_type.value.bslang entity.struct.literal.bslang meta.block.struct_literal.end.bslang
//          ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.without_type.bslang punctuation.separator.comma.variable.declaration.bslang
   
          
   
           //TODO rewrite operators to support binary operators here:
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
           std::assert(a != b);
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang
//         ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.namespace.usage.bslang entity.name.namespace.usage.bslang
//            ^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.namespace.usage.bslang punctuation.separator.namespace.access.bslang
//              ^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang entity.name.function.call.bslang
//                    ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang meta.brace.round.function_call.begin.bslang
//                     ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang variable.name.bslang
//                      ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang
//                       ^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang keyword.operator.binary.compare.bslang
//                         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang
//                          ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang variable.name.bslang
//                           ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang meta.brace.round.function_call.end.bslang
//                            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang punctuation.terminator.function_call.bslang
           //std::assert(a@ + 1 == b@);
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
           //std::assert(n@ != m@);
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
           //std::assert(a@, +1, true == b@);
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
           //b or true;
// ^^^^^^^^^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang comment.line.double-slash.bslang
           
   
           do {
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang
//         ^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang keyword.control.do.bslang
//           ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang
//            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang punctuation.definition.do.while.loop.begin.bslang
               break;
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.loop.break.bslang
//             ^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.loop.break.bslang keyword.control.loop.break.bslang
//                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.loop.break.bslang punctuation.terminator.loop.break.bslang
               continue;
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.loop.continue.bslang
//             ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.loop.continue.bslang keyword.control.loop.continue.bslang
//                     ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.loop.continue.bslang punctuation.terminator.loop.continue.bslang
           } while false;
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang
//         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.while.loop.start.bslang punctuation.definition.do.while.loop.end.bslang
//          ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.while.loop.start.bslang
//           ^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.while.loop.start.bslang keyword.control.while.postfix.bslang
//                ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.while.loop.start.bslang entity.do.while.loop.condition.bslang
//                 ^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.while.loop.start.bslang entity.do.while.loop.condition.bslang constant.language.boolean.bslang
//                      ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang punctuation.separator.comma.do.while.loop.condition.end.bslan
   
           do {
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang
//         ^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang keyword.control.do.bslang
//           ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang
//            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang punctuation.definition.do.while.loop.begin.bslang
               break;
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.loop.break.bslang
//             ^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.loop.break.bslang keyword.control.loop.break.bslang
//                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.loop.break.bslang punctuation.terminator.loop.break.bslang
               continue;
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.loop.continue.bslang
//             ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.loop.continue.bslang keyword.control.loop.continue.bslang
//                     ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.loop.continue.bslang punctuation.terminator.loop.continue.bslang
           } while true;
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang
//         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.while.loop.start.bslang punctuation.definition.do.while.loop.end.bslang
//          ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.while.loop.start.bslang
//           ^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.while.loop.start.bslang keyword.control.while.postfix.bslang
//                ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.while.loop.start.bslang entity.do.while.loop.condition.bslang
//                 ^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.while.loop.start.bslang entity.do.while.loop.condition.bslang constant.language.boolean.bslang
//                     ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang punctuation.separator.comma.do.while.loop.condition.end.bslan
   
           let n: mutable U32 = 1000;
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//             ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//              ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                ^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang storage.modifier.mutable.bslang
//                       ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang
//                        ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                           ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                             ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                              ^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
           let k: mutable U32 = 0;
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//         ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang
//             ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//              ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                ^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang storage.modifier.mutable.bslang
//                       ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.storage.modifier.mutable.bslang
//                        ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                           ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                             ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                              ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
           do {
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang
//         ^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang keyword.control.do.bslang
//           ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang
//            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang punctuation.definition.do.while.loop.begin.bslang
               if n > 100 {
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.if.branch.bslang
//             ^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.if.branch.bslang keyword.control.if.bslang
//               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.if.branch.bslang
//                ^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang
//                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang keyword.operator.binary.compare.bslang
//                   ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang
//                    ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                       ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang entity.if.branch.condition.bslang
//                        ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.if.branch.start.bslang punctuation.definition.if.branch.begin.bslang
                   n = 1;
// ^^^^^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.branch.body.bslang entity.variable.assignment.bslang
//                 ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.branch.body.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.branch.body.bslang entity.variable.assignment.bslang
//                   ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.branch.body.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//                    ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.branch.body.bslang entity.variable.assignment.bslang
//                     ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.branch.body.bslang entity.variable.assignment.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                      ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.if.branch.bslang entity.branch.body.bslang entity.variable.assignment.bslang punctuation.separator.comma.variable.assigment.bslang
               }
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.if.branch.bslang
//             ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.if.branch.bslang punctuation.definition.if.branch.end.bslang
               let n_plus_k: U32 = n + k;
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang
//             ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang storage.type.let.bslang
//                ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang
//                 ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang variable.name.local_variable.bslang
//                         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.colon.variable_type.bslang
//                          ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                           ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang entity.name.type.builtin.bslang
//                              ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.type.bslang
//                               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang keyword.operator.assignment.local_variable.initialization.bslang
//                                ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                                 ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang variable.name.bslang
//                                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                                   ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang entity.operator.unary_operator.prefix.numeric.bslang keyword.operator.unary.prefix.numeric.bslang
//                                    ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang
//                                     ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang entity.variable.declaration.initialization.value.bslang variable.name.bslang
//                                      ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.declaration.initialization.bslang punctuation.separator.comma.variable.declaration.bslang
               k = n;
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//             ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//              ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//                ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//                 ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang variable.name.bslang
//                  ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang punctuation.separator.comma.variable.assigment.bslang
               n = n_plus_k;
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//             ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//              ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//                ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//                 ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang variable.name.bslang
//                         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang punctuation.separator.comma.variable.assigment.bslang
               continue;
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.loop.continue.bslang
//             ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.loop.continue.bslang keyword.control.loop.continue.bslang
//                     ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.loop.continue.bslang punctuation.terminator.loop.continue.bslang
               n = 10000;
// ^^^^^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//             ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang invalid.illegal.variable_name.variable.assignment.bslang
//              ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang keyword.operator.assignment.local_variable.bslang
//                ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang
//                 ^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                      ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.loop.body.bslang entity.variable.assignment.bslang punctuation.separator.comma.variable.assigment.bslang
           } while n < 100;
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang
//         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.while.loop.start.bslang punctuation.definition.do.while.loop.end.bslang
//          ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.while.loop.start.bslang
//           ^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.while.loop.start.bslang keyword.control.while.postfix.bslang
//                ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.while.loop.start.bslang entity.do.while.loop.condition.bslang
//                   ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.while.loop.start.bslang entity.do.while.loop.condition.bslang keyword.operator.binary.compare.bslang
//                    ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.while.loop.start.bslang entity.do.while.loop.condition.bslang
//                     ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang entity.while.loop.start.bslang entity.do.while.loop.condition.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                        ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.do.while.loop.bslang punctuation.separator.comma.do.while.loop.condition.end.bslan
   
           std::assert(a >= 42 != false);
// ^^^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang
//         ^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.namespace.usage.bslang entity.name.namespace.usage.bslang
//            ^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.namespace.usage.bslang punctuation.separator.namespace.access.bslang
//              ^^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang entity.name.function.call.bslang
//                    ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang meta.brace.round.function_call.begin.bslang
//                     ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang variable.name.bslang
//                      ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang
//                       ^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang keyword.operator.binary.compare.bslang
//                         ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang
//                          ^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang constant.numeric.bslang entity.literal.numeric.decimal.bslang
//                            ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang
//                             ^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang keyword.operator.binary.compare.bslang
//                               ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang
//                                ^^^^^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang constant.language.boolean.bslang
//                                     ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang entity.function.call.bslang meta.brace.round.function_call.end.bslang
//                                      ^ source.bslang entity.namespace.bslang entity.function.bslang entity.function.body.bslang punctuation.terminator.function_call.bslang
       }
// ^^^^ source.bslang entity.namespace.bslang entity.function.bslang
//     ^ source.bslang entity.namespace.bslang entity.function.bslang punctuation.defintion.block.end.function.bslang
   
   }
// ^ source.bslang entity.namespace.bslang punctuation.definition.namespace.end.bslang
   
